/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as UsageImport } from "./routes/usage";
import { Route as LicenseImport } from "./routes/license";
import { Route as IntroductionImport } from "./routes/introduction";
import { Route as InstallationImport } from "./routes/installation";
import { Route as FeaturesImport } from "./routes/features";
import { Route as ContributingImport } from "./routes/contributing";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const UsageRoute = UsageImport.update({
  path: "/usage",
  getParentRoute: () => rootRoute,
} as any);

const LicenseRoute = LicenseImport.update({
  path: "/license",
  getParentRoute: () => rootRoute,
} as any);

const IntroductionRoute = IntroductionImport.update({
  path: "/introduction",
  getParentRoute: () => rootRoute,
} as any);

const InstallationRoute = InstallationImport.update({
  path: "/installation",
  getParentRoute: () => rootRoute,
} as any);

const FeaturesRoute = FeaturesImport.update({
  path: "/features",
  getParentRoute: () => rootRoute,
} as any);

const ContributingRoute = ContributingImport.update({
  path: "/contributing",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/contributing": {
      id: "/contributing";
      path: "/contributing";
      fullPath: "/contributing";
      preLoaderRoute: typeof ContributingImport;
      parentRoute: typeof rootRoute;
    };
    "/features": {
      id: "/features";
      path: "/features";
      fullPath: "/features";
      preLoaderRoute: typeof FeaturesImport;
      parentRoute: typeof rootRoute;
    };
    "/installation": {
      id: "/installation";
      path: "/installation";
      fullPath: "/installation";
      preLoaderRoute: typeof InstallationImport;
      parentRoute: typeof rootRoute;
    };
    "/introduction": {
      id: "/introduction";
      path: "/introduction";
      fullPath: "/introduction";
      preLoaderRoute: typeof IntroductionImport;
      parentRoute: typeof rootRoute;
    };
    "/license": {
      id: "/license";
      path: "/license";
      fullPath: "/license";
      preLoaderRoute: typeof LicenseImport;
      parentRoute: typeof rootRoute;
    };
    "/usage": {
      id: "/usage";
      path: "/usage";
      fullPath: "/usage";
      preLoaderRoute: typeof UsageImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ContributingRoute,
  FeaturesRoute,
  InstallationRoute,
  IntroductionRoute,
  LicenseRoute,
  UsageRoute,
});

/* prettier-ignore-end */
